import numpy as np
import pandas as pd

from sklearn.preprocessing import LabelEncoder , StandardScaler;
from sklearn.decomposition import PCA
from sklearn.linear_model import LogisticRegression
from sklearn.model_selection import train_test_split

dataset = pd.read_csv("Social_Network_Ads.csv");

le = LabelEncoder()
dataset['Gender']  = le.fit_transform(dataset['Gender']);

dataset.Gender.fillna(np.mean(dataset['Gender']))

dataset.drop(["User ID"], axis=1, inplace=True);
X = dataset[['Gender', 'Age', 'EstimatedSalary']]
Y = dataset[['Purchased']]

sc = StandardScaler()
X_scaled = sc.fit_transform(X);

# PCA 1
pca = PCA(n_components=1);
X_1_dimension = pca.fit_transform(X_scaled)

# PCA 2
pca = PCA(n_components=2);
X_2_dimension = pca.fit_transform(X_scaled)

print(pca.n_components_)
print(pca.explained_variance_)

def score(X):
    X_train , X_test , Y_train , Y_test = train_test_split(X , Y , test_size = 0.2 , random_state = 12);

    model = LogisticRegression()
    model.fit(X_train , Y_train)

    return model.score(X_test , Y_test);

print("Normal   : " , score(X_scaled))
print("PCA 1    : " , score(X_1_dimension));
print("PCA 2    : " , score(X_2_dimension));


print(pca.n_components_)
print(pca.explained_variance_)